plugins {
    id "java"
    id "idea"
    id "org.springframework.boot" version "${springBootVersion}"
    id "org.owasp.dependencycheck" version "9.0.7"
    id "com.diffplug.spotless" version "6.23.3"
    id "com.github.ben-manes.versions" version "0.50.0"
    id "jacoco"
}

apply plugin: "io.spring.dependency-management"

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/release" }
}

spotless {
    java {
        googleJavaFormat()
        trimTrailingWhitespace()
        endWithNewline()
    }

    groovyGradle {
        target "*.gradle", "**/*.gradle"
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }

    format "misc", {
        target "**/*.md", "**/*.yml"
        trimTrailingWhitespace()
        indentWithSpaces(2)
        endWithNewline()
    }

    lineEndings "UNIX"
}

sourceCompatibility = "17"
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"
[compileJava, compileTestJava]*.options*.compilerArgs = ["-parameters", "-Xlint:all"]

dependencies {
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-json"
    developmentOnly "org.springframework.boot:spring-boot-devtools"
    developmentOnly "org.springframework.boot:spring-boot-docker-compose"

    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-csv"

    implementation "commons-io:commons-io:2.15.1"
    implementation "org.modelmapper:modelmapper:3.2.0"
    implementation "commons-codec:commons-codec"

    implementation platform("software.amazon.awssdk:bom:2.22.12")
    implementation "software.amazon.awssdk:s3"
    implementation "software.amazon.awssdk:ecs"
    implementation "software.amazon.awssdk:dynamodb"
    implementation "software.amazon.awssdk:dynamodb-enhanced"
    implementation "software.amazon.awssdk:sqs"
    implementation "software.amazon.awssdk:ses"
    implementation "software.amazon.awssdk:iam"
    implementation "software.amazon.awssdk:sts"
    implementation "software.amazon.awssdk:cognitoidentityprovider"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "com.h2database:h2"

    testImplementation "org.flywaydb.flyway-test-extensions:flyway-spring-test:9.5.0"
    testImplementation "org.springframework.boot:spring-boot-testcontainers"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:localstack"

    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"

    runtimeOnly "org.springframework.boot:spring-boot-properties-migrator"
}

tasks.named("test") {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

bootJar {
    enabled = false
}

compileJava.dependsOn "spotlessApply"
